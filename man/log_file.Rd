% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/log_file.R
\name{log_file}
\alias{log_file}
\title{Activate a log file}
\usage{
log_file(file_name, ..., .warning = TRUE, .error = TRUE, .message = TRUE,
  .formatter = format_log_entry, subscriptions = NULL, overwrite = TRUE,
  log_muffled = FALSE)
}
\arguments{
\item{file_name}{the path to the log file.}

\item{...}{list of quoted or unquoted events to log. In none are
provided all log events will be captured.}

\item{.warning}{logical: capture regular warnings (\code{simpleWarning})?}

\item{.error}{logical: capture regular errors (\code{simpleError})?}

\item{.message}{logical: capture regular messages (\code{simpleMessage})?}

\item{.formatter}{function: the formatting function used to convert
a log event to its character representation for the log file.}

\item{subscriptions}{character vector: optional list of
subscriptions to use (in place of specifying with \code{...}).}

\item{overwrite}{logical: whether or not to overwrite the file at
\code{file_name} if it already exists. Set to TRUE by default.}

\item{log_muffled}{logical: Log messages and warnings
even if muffled? This affects only logging as result of
\code{warning} and \code{message}.}
}
\value{
\code{NULL}, invisibly.
}
\description{
\code{log_file} creates an active instance
of a log file to which loggr can pass errors, warnings and messages.
If this file already exists, it will be appended
to unless \code{overwrite} is set to TRUE.
}
\examples{
\dontrun{
#Create a "default" log file instance
log_file()

#Create a log file instance that only checks errors
log_file("errors_only_thanks.log", ERROR, CRITICAL,
         .warning = FALSE, .message = FALSE)
}
}
